// Generated by view binder compiler. Do not edit!
package com.mrcomic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mrcomic.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTranslationResultBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button buttonCopy;

  @NonNull
  public final Button buttonShare;

  @NonNull
  public final ImageView imageViewOfflineIndicator;

  @NonNull
  public final LinearLayout layoutError;

  @NonNull
  public final TextView textViewConfidence;

  @NonNull
  public final TextView textViewError;

  @NonNull
  public final TextView textViewLanguages;

  @NonNull
  public final TextView textViewOriginal;

  @NonNull
  public final TextView textViewProvider;

  @NonNull
  public final TextView textViewTranslated;

  private ItemTranslationResultBinding(@NonNull CardView rootView, @NonNull Button buttonCopy,
      @NonNull Button buttonShare, @NonNull ImageView imageViewOfflineIndicator,
      @NonNull LinearLayout layoutError, @NonNull TextView textViewConfidence,
      @NonNull TextView textViewError, @NonNull TextView textViewLanguages,
      @NonNull TextView textViewOriginal, @NonNull TextView textViewProvider,
      @NonNull TextView textViewTranslated) {
    this.rootView = rootView;
    this.buttonCopy = buttonCopy;
    this.buttonShare = buttonShare;
    this.imageViewOfflineIndicator = imageViewOfflineIndicator;
    this.layoutError = layoutError;
    this.textViewConfidence = textViewConfidence;
    this.textViewError = textViewError;
    this.textViewLanguages = textViewLanguages;
    this.textViewOriginal = textViewOriginal;
    this.textViewProvider = textViewProvider;
    this.textViewTranslated = textViewTranslated;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTranslationResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTranslationResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_translation_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTranslationResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonCopy;
      Button buttonCopy = ViewBindings.findChildViewById(rootView, id);
      if (buttonCopy == null) {
        break missingId;
      }

      id = R.id.buttonShare;
      Button buttonShare = ViewBindings.findChildViewById(rootView, id);
      if (buttonShare == null) {
        break missingId;
      }

      id = R.id.imageViewOfflineIndicator;
      ImageView imageViewOfflineIndicator = ViewBindings.findChildViewById(rootView, id);
      if (imageViewOfflineIndicator == null) {
        break missingId;
      }

      id = R.id.layoutError;
      LinearLayout layoutError = ViewBindings.findChildViewById(rootView, id);
      if (layoutError == null) {
        break missingId;
      }

      id = R.id.textViewConfidence;
      TextView textViewConfidence = ViewBindings.findChildViewById(rootView, id);
      if (textViewConfidence == null) {
        break missingId;
      }

      id = R.id.textViewError;
      TextView textViewError = ViewBindings.findChildViewById(rootView, id);
      if (textViewError == null) {
        break missingId;
      }

      id = R.id.textViewLanguages;
      TextView textViewLanguages = ViewBindings.findChildViewById(rootView, id);
      if (textViewLanguages == null) {
        break missingId;
      }

      id = R.id.textViewOriginal;
      TextView textViewOriginal = ViewBindings.findChildViewById(rootView, id);
      if (textViewOriginal == null) {
        break missingId;
      }

      id = R.id.textViewProvider;
      TextView textViewProvider = ViewBindings.findChildViewById(rootView, id);
      if (textViewProvider == null) {
        break missingId;
      }

      id = R.id.textViewTranslated;
      TextView textViewTranslated = ViewBindings.findChildViewById(rootView, id);
      if (textViewTranslated == null) {
        break missingId;
      }

      return new ItemTranslationResultBinding((CardView) rootView, buttonCopy, buttonShare,
          imageViewOfflineIndicator, layoutError, textViewConfidence, textViewError,
          textViewLanguages, textViewOriginal, textViewProvider, textViewTranslated);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
